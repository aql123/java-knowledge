package Z_0001_设计模式.D_02_抽象工厂模式.S3_静态抽象工厂;

import Z_0001_设计模式.D_02_抽象工厂模式.S2_抽象工厂模式.I1_中国披萨;
import Z_0001_设计模式.D_02_抽象工厂模式.S2_抽象工厂模式.I1_美国披萨;

/**
 * 比较明显的问题：如果我们再增加一个产品树（等级结构），比如巴西 pizza，那么，我们需要为每个子工厂添加一个巴西披萨的制作方法。
 */
public class J2_制作披萨 {

    public static void 制作() {
        I1_中国披萨 沙拉酱中国披萨 = J1_字符串披萨工厂.创建中国披萨("Z_0001_设计模式.D_02_抽象工厂模式.S1_需求场景.I2_沙拉酱中国披萨");
        I1_中国披萨 番茄酱中国披萨 = J1_字符串披萨工厂.创建中国披萨("Z_0001_设计模式.D_02_抽象工厂模式.S1_需求场景.I2_番茄酱中国披萨");
        I1_美国披萨 沙拉酱美国披萨 = J1_字符串披萨工厂.创建美国披萨("Z_0001_设计模式.D_02_抽象工厂模式.S1_需求场景.I2_沙拉酱美国披萨");
        I1_美国披萨 番茄酱美国披萨 = J1_字符串披萨工厂.创建美国披萨("Z_0001_设计模式.D_02_抽象工厂模式.S1_需求场景.I2_番茄酱美国披萨");
    }

    public static void main(String[] args) {
        制作();
    }
}
